# ==============================================
# API REST RUST - CONFIGURAÇÃO DE AMBIENTE
# ==============================================
#
# Este arquivo contém todas as configurações necessárias para executar a API.
# Copie este arquivo para .env e ajuste os valores conforme necessário.

# ==============================================
# CONFIGURAÇÃO DO BANCO DE DADOS
# ==============================================

# URL de conexão com PostgreSQL
# Formato: postgresql://usuario:senha@host:porta/nome_do_banco
DATABASE_URL=postgresql://rust_user:rust_password@localhost:5432/rust_api_db

# Configurações específicas do PostgreSQL (para referência)
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=rust_user
POSTGRES_PASSWORD=rust_password
POSTGRES_DB=rust_api_db

# Pool de conexões
DATABASE_MAX_CONNECTIONS=10
DATABASE_MIN_CONNECTIONS=1
DATABASE_CONNECT_TIMEOUT=30
DATABASE_IDLE_TIMEOUT=600

# ==============================================
# CONFIGURAÇÃO DO SERVIDOR
# ==============================================

# Endereço e porta do servidor
SERVER_HOST=127.0.0.1
SERVER_PORT=8080

# Número de workers (threads)
SERVER_WORKERS=4

# Timeout para requisições (em segundos)
REQUEST_TIMEOUT=60

# Tamanho máximo do payload (em bytes)
MAX_PAYLOAD_SIZE=1048576

# ==============================================
# CONFIGURAÇÃO DE LOGS
# ==============================================

# Nível de log (error, warn, info, debug, trace)
RUST_LOG=info

# Formato de log (json, pretty, compact)
LOG_FORMAT=pretty

# Arquivo de log (opcional - se não especificado, usa stdout)
# LOG_FILE=/var/log/api-rust/app.log

# ==============================================
# CONFIGURAÇÃO DE SEGURANÇA
# ==============================================

# Chave secreta para JWT (gerar uma chave segura em produção)
JWT_SECRET=sua-chave-secreta-super-segura-aqui-mude-em-producao

# Tempo de expiração do JWT (em segundos)
JWT_EXPIRATION=3600

# Salt para bcrypt (custo computacional: 4-31, recomendado: 10-12)
BCRYPT_COST=12

# CORS - Origins permitidas (separadas por vírgula)
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080

# ==============================================
# CONFIGURAÇÃO DE AMBIENTE
# ==============================================

# Ambiente de execução (development, production, test)
RUST_ENV=development

# Habilitar modo debug
DEBUG=true

# ==============================================
# CONFIGURAÇÃO DE EMAIL (para futuras features)
# ==============================================

# Configurações SMTP
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=seu-email@gmail.com
SMTP_PASSWORD=sua-senha-de-app
SMTP_FROM=noreply@suaapi.com

# ==============================================
# CONFIGURAÇÃO DE CACHE REDIS (opcional)
# ==============================================

# URL de conexão com Redis
# REDIS_URL=redis://localhost:6379

# TTL padrão para cache (em segundos)
# CACHE_TTL=300

# ==============================================
# CONFIGURAÇÃO DE RATE LIMITING
# ==============================================

# Número máximo de requisições por minuto por IP
RATE_LIMIT_RPM=60

# Número de requisições em rajada permitidas
RATE_LIMIT_BURST=10

# Janela de tempo para rate limiting (em segundos)
RATE_LIMIT_WINDOW=60

# ==============================================
# CONFIGURAÇÃO DE MONITORAMENTO
# ==============================================

# Habilitar métricas Prometheus
ENABLE_METRICS=false

# Porta para métricas (se habilitada)
METRICS_PORT=9090

# ==============================================
# CONFIGURAÇÃO DE DESENVOLVIMENTO
# ==============================================

# Habilitar auto-reload em desenvolvimento
AUTO_RELOAD=true

# Habilitar middleware de desenvolvimento
DEV_MIDDLEWARE=true

# Habilitar logs detalhados de SQL
LOG_SQL_QUERIES=false

# ==============================================
# CONFIGURAÇÃO DE DOCKER/KUBERNETES
# ==============================================

# Healthcheck endpoint
HEALTH_CHECK_PATH=/health

# Readiness probe endpoint
READINESS_PATH=/ready

# Graceful shutdown timeout (em segundos)
SHUTDOWN_TIMEOUT=30

# ==============================================
# CONFIGURAÇÕES ADICIONAIS
# ==============================================

# Timezone da aplicação
TZ=UTC

# Locale
LC_ALL=en_US.UTF-8

# ==============================================
# EXEMPLO DE USO EM DIFERENTES AMBIENTES
# ==============================================

# DESENVOLVIMENTO:
# - Use as configurações padrão acima
# - DEBUG=true
# - RUST_LOG=debug
# - RUST_ENV=development
# - RATE_LIMIT_RPM=60 (moderado)

# TESTE:
# - DATABASE_URL=postgresql://test_user:test_pass@localhost:5432/test_db
# - RUST_ENV=test
# - RUST_LOG=warn
# - RATE_LIMIT_RPM=120 (mais permissivo para testes)

# PRODUÇÃO:
# - Altere todas as senhas e chaves secretas
# - DEBUG=false
# - RUST_LOG=info
# - RUST_ENV=production
# - RATE_LIMIT_RPM=30 (mais restritivo)
# - RATE_LIMIT_BURST=5 (menor burst)
# - Use variáveis de ambiente do sistema em vez deste arquivo

# ==============================================
# SEGURANÇA - IMPORTANTE!
# ==============================================
#
# ⚠️  NUNCA COMMITE ESTE ARQUIVO COM DADOS REAIS!
# ⚠️  EM PRODUÇÃO, USE VARIÁVEIS DE AMBIENTE DO SISTEMA
# ⚠️  GERE CHAVES SECRETAS ÚNICAS E SEGURAS
# ⚠️  USE SENHAS FORTES PARA O BANCO DE DADOS
# ⚠️  CONFIGURE HTTPS EM PRODUÇÃO
# ⚠️  LIMITE O ACESSO AO BANCO DE DADOS POR IP
# ⚠️  AJUSTE RATE LIMITING CONFORME SUA NECESSIDADE
# ⚠️  EM PRODUÇÃO, USE REVERSE PROXY COM RATE LIMITING ADICIONAL
#
# ==============================================
